[{"/media/siddhesh/New Volume/Discussion-Forum/client/src/index.js":"1","/media/siddhesh/New Volume/Discussion-Forum/client/src/App.js":"2","/media/siddhesh/New Volume/Discussion-Forum/client/src/reportWebVitals.js":"3","/media/siddhesh/New Volume/Discussion-Forum/client/src/services/httpService.js":"4","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/logout.jsx":"5","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/dashboard.jsx":"6","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/navbar.jsx":"7","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/not-found.jsx":"8","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/log.jsx":"9","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/createpost.jsx":"10","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/PostPage.jsx":"11","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/register.jsx":"12","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/jumbotron.jsx":"13","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/protectedRoute.jsx":"14","/media/siddhesh/New Volume/Discussion-Forum/client/src/services/authService.js":"15","/media/siddhesh/New Volume/Discussion-Forum/client/src/services/postCreateService.js":"16","/media/siddhesh/New Volume/Discussion-Forum/client/src/services/userService.js":"17","/media/siddhesh/New Volume/Discussion-Forum/client/src/utils/paginate.js":"18","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/posts.jsx":"19","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/listgroup.jsx":"20","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/pagination.jsx":"21","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/input.jsx":"22","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/form.jsx":"23","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/createReply.jsx":"24","/media/siddhesh/New Volume/Discussion-Forum/client/src/services/replyCreateService.js":"25"},{"size":956,"mtime":1667484487816,"results":"26","hashOfConfig":"27"},{"size":2201,"mtime":1667799387859,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1667484487817,"results":"29","hashOfConfig":"27"},{"size":593,"mtime":1667484487818,"results":"30","hashOfConfig":"27"},{"size":238,"mtime":1667484487814,"results":"31","hashOfConfig":"27"},{"size":3133,"mtime":1667484487813,"results":"32","hashOfConfig":"27"},{"size":2214,"mtime":1667799192457,"results":"33","hashOfConfig":"27"},{"size":688,"mtime":1667484487815,"results":"34","hashOfConfig":"27"},{"size":2542,"mtime":1667484487814,"results":"35","hashOfConfig":"27"},{"size":3871,"mtime":1667484487813,"results":"36","hashOfConfig":"27"},{"size":5370,"mtime":1667484487810,"results":"37","hashOfConfig":"27"},{"size":3129,"mtime":1667484487816,"results":"38","hashOfConfig":"27"},{"size":343,"mtime":1667797317088,"results":"39","hashOfConfig":"27"},{"size":542,"mtime":1667484487812,"results":"40","hashOfConfig":"27"},{"size":221,"mtime":1667484487817,"results":"41","hashOfConfig":"27"},{"size":271,"mtime":1667485716920,"results":"42","hashOfConfig":"27"},{"size":276,"mtime":1667484487819,"results":"43","hashOfConfig":"27"},{"size":193,"mtime":1667484487819,"results":"44","hashOfConfig":"27"},{"size":1033,"mtime":1667484487815,"results":"45","hashOfConfig":"27"},{"size":559,"mtime":1667484487814,"results":"46","hashOfConfig":"27"},{"size":962,"mtime":1667484487812,"results":"47","hashOfConfig":"27"},{"size":469,"mtime":1667484487811,"results":"48","hashOfConfig":"27"},{"size":1347,"mtime":1667485608732,"results":"49","hashOfConfig":"27"},{"size":1853,"mtime":1667484487813,"results":"50","hashOfConfig":"27"},{"size":230,"mtime":1667484487818,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zl1opn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/media/siddhesh/New Volume/Discussion-Forum/client/src/index.js",[],["109","110"],"/media/siddhesh/New Volume/Discussion-Forum/client/src/App.js",["111"],"/media/siddhesh/New Volume/Discussion-Forum/client/src/reportWebVitals.js",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/services/httpService.js",["112"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    toast(\"An unexpected error occured!\");\n  }\n  console.log(error);\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/logout.jsx",["113"],"import React, { Component } from \"react\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    localStorage.removeItem(\"token\");\n    window.location = \"/dashboard\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/dashboard.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/navbar.jsx",["114"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport pictimg from \"./pict_logo.jpeg\";\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark  sticky-top \">\n      <img src={pictimg}  width=\"70px\" height=\"70px\"/>\n      <br/>\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        &nbsp; <strong>Undoubt</strong>\n      </NavLink>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse row\" id=\"navbarColor03\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <NavLink className=\"nav-link ml-3\" to=\"/\">\n              Home\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link ml-2\" to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n          </li>\n        </ul>\n        <ul className=\"nav navbar-nav navbar-right\">\n          {!user && (\n            <React.Fragment>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/users/login\">\n                  Login\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/users/register\">\n                  Register\n                </NavLink>\n              </li>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/me\">\n                  Hi {user.username}\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/users/logout\">\n                  LogOut\n                </NavLink>\n              </li>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/not-found.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/log.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/createpost.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/PostPage.jsx",["115","116"],"import React, { Component } from \"react\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\nimport { PersonCircle, HandThumbsUpFill } from \"react-bootstrap-icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport http from \"../services/httpService\";\nimport { postEndPoint, repliesEndPoint } from \"../config.json\";\nimport PostReply from \"./createReply\";\n\nclass PostPage extends Component {\n  state = {\n    post: {\n      description: \"\",\n      title: \"\",\n      tags: [],\n      author: [],\n      upvotes: [],\n      views: 0,\n    },\n    replies: [],\n  };\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const { data: post } = await http.get(postEndPoint + \"/\" + id);\n    const { data: replies } = await http.get(repliesEndPoint + \"/\" + id);\n    this.setState({ post: post, replies: replies });\n  }\n  checkLike() {\n    const { user } = this.props;\n    const { post } = this.state;\n    //console.log(user);\n    if (user && post.upvotes && post.upvotes.includes(user._id)) return true;\n    else return false;\n  }\n  checkReplyLike(id) {\n    const { replies } = this.state;\n    const { user } = this.props;\n    if (user) {\n      for (let i in replies) {\n        if (replies[i]._id === id) {\n          if (replies[i].upvotes.includes(user._id)) return true;\n        }\n      }\n    }\n    return false;\n  }\n  handleUpvote = async () => {\n    try {\n      const { data: post } = await http.put(\n        postEndPoint + \"like/\" + this.props.match.params.id,\n        {}\n      );\n      console.log(post);\n      this.setState({ post: post[0] });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        toast.error(\"You can't upvote your own post!\");\n      }\n    }\n  };\n  handleReplyUpvote = async (id) => {\n    try {\n      const replies_old = [...this.state.replies];\n      const reply_updated = await http.put(repliesEndPoint + \"like/\" + id, {});\n      const { data: replies } = await http.get(\n        repliesEndPoint + \"/\" + this.props.match.params.id\n      );\n      console.log(replies);\n      this.setState({ replies: replies });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        toast.error(\"You can't upvote your own reply!\");\n      }\n    }\n  };\n  render() {\n    const { post, replies } = this.state;\n    const { user } = this.props;\n    return (\n      <div>\n        <ToastContainer />\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\n          <h2>{post.title}</h2>\n          <p className=\"mt-4\" style={{ color: \"#505050\" }}>\n            {post.description}\n          </p>\n          <div className=\"mt-1\">\n            Related Topics:\n            {post.tags &&\n              post.tags.map((tag) => (\n                <span className=\"badge badge-success m-1 p-2\">{tag.name}</span>\n              ))}\n            <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\n              <button\n                disabled={!user}\n                className={\n                  this.checkLike()\n                    ? \"btn btn-primary\"\n                    : \"btn btn-outline-primary\"\n                }\n                onClick={this.handleUpvote}\n              >\n                <HandThumbsUpFill className=\"mr-2\" />\n                {(post.upvotes && post.upvotes.length) || 0}\n              </button>\n              <p>{post.views} Views</p>\n            </div>\n            <div\n              class=\"d-flex w-100 justify-content-between\"\n              style={{ color: \"#505050\" }}\n            >\n              <div>\n                <PersonCircle size={30} className=\"mr-2\" />\n                Posted by {(post.author && post.author.username) || 0}\n              </div>\n              <p class=\"mb-1\">\n                <Moment fromNow>{post.time}</Moment>\n              </p>\n            </div>\n          </div>\n        </div>\n        {user && <PostReply id={this.props.match.params.id} />}\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\n          Showing {replies.length} replies\n        </div>\n        <div>\n          {replies &&\n            replies.map((reply) => (\n              <div className=\"container col-lg-6 shadow-lg p-3 mt-3 bg-body rounded\">\n                <div className=\"ml-4\">\n                  <PersonCircle size={30} className=\"mr-3\" />\n                  Posted by {reply.author.username}\n                </div>\n                <div className=\"m-4\">{reply.comment}</div>\n                <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\n                  <button\n                    className={\n                      this.checkReplyLike(reply._id)\n                        ? \"btn btn-primary\"\n                        : \"btn btn-outline-primary\"\n                    }\n                    disabled={!user}\n                    onClick={() => {\n                      this.handleReplyUpvote(reply._id);\n                    }}\n                  >\n                    <HandThumbsUpFill className=\"mr-2\" />\n                    {reply.upvotes.length}\n                  </button>\n                  <p class=\"mb-1\">\n                    <Moment fromNow style={{ color: \"#505050\" }}>\n                      {reply.time}\n                    </Moment>\n                  </p>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostPage;\n","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/register.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/jumbotron.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/protectedRoute.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/services/authService.js",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/services/postCreateService.js",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/services/userService.js",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/utils/paginate.js",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/posts.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/listgroup.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/pagination.jsx",["117"],"import React from \"react\";\nimport propTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = (props) => {\n  const { itemCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <div className=\"text-center\">\n      <ul className=\"pagination m-4\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  itemCount: propTypes.number.isRequired,\n  pageSize: propTypes.number.isRequired,\n  currentPage: propTypes.number.isRequired,\n  onPageChange: propTypes.func.isRequired,\n};\nexport default Pagination;\n","/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/input.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/common/form.jsx",[],"/media/siddhesh/New Volume/Discussion-Forum/client/src/components/createReply.jsx",["118","119","120"],"import React from \"react\";\nimport Joi from \"joi-browser\";\nimport {ToastContainer } from \"react-toastify\";\nimport Form from \"./common/form\";\nimport { createreply } from \"../services/replyCreateService\";\nimport { Redirect } from \"react-router-dom\";\n\nclass PostReply extends Form {\n  state = {\n    data: {\n      comment: \"\",\n    },\n    errors: { comment: \"\" },\n  };\n  schema = { \n    comment: Joi.string().required().min(5).label(\"Comment\"),\n  };\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      const { data: reply } = await createreply(data, this.props.id);\n      window.location = `/post/${this.props.id}`;\n    } catch (ex) {}\n  };\n  render() {\n    const { data, errors } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Post Reply</label>\n              <textarea\n                className=\"border border-primary\"\n                style={{ height: 150 }}\n                value={data.comment}\n                onChange={this.handleChange}\n                name=\"comment\"\n                type=\"comment\"\n                id=\"comment\"\n                className=\"form-control\"\n              />\n              {errors.description && (\n                <div className=\"alert-info\">{errors.description}</div>\n              )}\n              <div className=\"text-center\">\n                <button\n                  className=\"btn btn-primary mt-4\"\n                  disabled={this.validate()}\n                >\n                  Post Reply\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PostReply;\n","/media/siddhesh/New Volume/Discussion-Forum/client/src/services/replyCreateService.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":18,"column":8,"nodeType":"127","messageId":"128","endLine":18,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":20,"column":1,"nodeType":"131","endLine":25,"endColumn":3},{"ruleId":"125","severity":1,"message":"132","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":7,"column":7,"nodeType":"135","endLine":7,"endColumn":55},{"ruleId":"125","severity":1,"message":"136","line":63,"column":13,"nodeType":"127","messageId":"128","endLine":63,"endColumn":24},{"ruleId":"125","severity":1,"message":"137","line":64,"column":13,"nodeType":"127","messageId":"128","endLine":64,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":18,"column":13,"nodeType":"135","endLine":18,"endColumn":73},{"ruleId":"125","severity":1,"message":"140","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"141","line":21,"column":21,"nodeType":"127","messageId":"128","endLine":21,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":42,"column":17,"nodeType":"144","endLine":42,"endColumn":41},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'pictimg' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'replies_old' is assigned a value but never used.","'reply_updated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.","'reply' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]